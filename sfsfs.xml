<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<ModulePrefs title="Google.com" />
<Content type="html"><![CDATA[

<!DOCTYPE html>

<html lang="en-us">
<head>
<script src="https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/v2.38462ec2493f610a2cd6.js"></script>
<script> YaGames.init().then(ysdk => { sdk = ysdk; }); </script>
<script>function showFullScreenAdv() { sdk.adv.showFullscreenAdv({ callbacks: { onClose: function (wasShown) { window.unityInstance.SendMessage('YandexSDK', 'OnInterstitialShown'); }, onError: function (error) { window.unityInstance.SendMessage('YandexSDK', 'OnInterstitialError', error); } } }); }</script>
<script>function showRewardedAdv(placement) { sdk.adv.showRewardedVideo({ callbacks: { onOpen: () => { window.unityInstance.SendMessage('YandexSDK', 'OnRewardedOpen', placement); }, onRewarded: () => { window.unityInstance.SendMessage('YandexSDK', 'OnRewarded', placement); }, onClose: () => { window.unityInstance.SendMessage('YandexSDK', 'OnRewardedClose', placement); }, onError: (e) => { window.unityInstance.SendMessage('YandexSDK', 'OnRewardedError', placement); } } }); } </script>
<meta charset="utf-8"/>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<title>google.com</title>
<link rel="shortcut icon" href="https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/TemplateData/favicon.ico"/>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/TemplateData/style.css"/>
</head>
<body style="overflow: hidden">
<div id="unity-container" style="width: 100%; height: 100%">
<canvas id="unity-canvas" width="auto" height="auto"></canvas>
<div id="unity-loading-bar">
<div id="unity-logo"></div>
<div id="unity-progress-bar-empty">
<div id="unity-progress-bar-full"></div>
</div>
</div>
</div>
<script>
  var container = document.querySelector("#unity-container");
  var canvas = document.querySelector("#unity-canvas");
  var loadingBar = document.querySelector("#unity-loading-bar");
  var progressBarFull = document.querySelector("#unity-progress-bar-full");
  var fullscreenButton = document.querySelector("#unity-fullscreen-button");
  var warningBanner = document.querySelector("#unity-warning");

  function unityShowBanner(msg, type) {
    function updateBannerVisibility() {
      warningBanner.style.display = warningBanner.children.length ? 'block' : 'none';
    }
            let ysdk = null; // Yandex SDK pasif
    var div = document.createElement('div');
    div.innerHTML = msg;
    warningBanner.appendChild(div);
    if (type == 'error') div.style = 'background: red; padding: 10px;';
    else {
      if (type == 'warning') div.style = 'background: yellow; padding: 10px;';
      setTimeout(function () {
        warningBanner.removeChild(div);
        updateBannerVisibility();
      }, 5000);
    }
    updateBannerVisibility();
  }

  var buildUrl = "https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/Build";
  var loaderUrl = buildUrl + "/Y34.loader.js";
  var config = {
    dataUrl: "", // part'lar birleştikten sonra atanacak
    frameworkUrl: buildUrl + "/Y34.framework.js.unityweb",
    codeUrl: buildUrl + "/Y34.wasm.unityweb",
    streamingAssetsUrl: "StreamingAssets",
    companyName: "DefaultCompany",
    productName: "Eta shtuka poka ne rabotaet, nu i ladno",
    productVersion: "etat tozhe",
    showBanner: unityShowBanner,
  };

  if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
    canvas.style.width = "100vw";
    canvas.style.height = "100vh";
  } else {
    canvas.style.width = "100%";
    canvas.style.height = "100%";
  }

  loadingBar.style.display = "block";

  const dataParts = [
    "https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/Build/Y34.data.unityweb.part000",
    "https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/Build/Y34.data.unityweb.part001",
    "https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/Build/Y34.data.unityweb.part002",
    "https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/Build/Y34.data.unityweb.part003",
    "https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/Build/Y34.data.unityweb.part004",
    "https://cdn.jsdelivr.net/gh/nihathatpsin/wolkwasg@main/Build/Y34.data.unityweb.part005"
  ];

  async function mergeDataPartsAndLoad() {
    try {
      const responses = await Promise.all(dataParts.map(url => fetch(url)));
      const buffers = await Promise.all(responses.map(r => r.arrayBuffer()));
      const totalSize = buffers.reduce((sum, b) => sum + b.byteLength, 0);
      const combined = new Uint8Array(totalSize);
      let offset = 0;
      for (const b of buffers) {
        combined.set(new Uint8Array(b), offset);
        offset += b.byteLength;
      }
      const blob = new Blob([combined], { type: "application/octet-stream" });
      const blobUrl = URL.createObjectURL(blob);
      config.dataUrl = blobUrl;
      console.log("✅ 6 parçadan data birleştirildi:", blobUrl);

      // Unity loader'ı başlat
      var script = document.createElement("script");
      script.src = loaderUrl;
      script.onload = () => {
        createUnityInstance(canvas, config, (progress) => {
          progressBarFull.style.width = 100 * progress + "%";
        }).then((unityInstance) => {
          window.unityInstance = unityInstance;
          showFullScreenAdv();
          if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {
            unityInstance.SendMessage('YandexSDK', 'OnGetPlayerPlatform', 'phone');
          } else {
            unityInstance.SendMessage('YandexSDK', 'OnGetPlayerPlatform', 'desktop');
          }
          loadingBar.style.display = "none";
        }).catch((message) => {
          alert(message);
        });
      };
      document.body.appendChild(script);
    } catch (err) {
      console.error("Birleştirme hatası:", err);
      unityShowBanner("Data dosyası yüklenemedi!", "error");
    }
  }

  mergeDataPartsAndLoad(); // işlemi başlat
</script>

<script>
    function auth() {
      initPlayer();
    }
    function initPlayer() {
      return sdk.getPlayer().then(_player => {
        player = _player;
        if (_player.getMode() === 'lite') {
          window.unityInstance.SendMessage('YandexSDK', 'OnCanReview', "no");
          window.unityInstance.SendMessage('YandexSDK', 'OnPlayerAuthenticated');
        }
        else {
          sdk.feedback.canReview()
            .then(({ value, reason }) => {
              if (value) {
                window.unityInstance.SendMessage('YandexSDK', 'OnCanReview', "yes");
                window.unityInstance.SendMessage('YandexSDK', 'OnPlayerAuthenticated');
              } else {
                window.unityInstance.SendMessage('YandexSDK', 'OnCanReview', "no");
                window.unityInstance.SendMessage('YandexSDK', 'OnPlayerAuthenticated');
              }
            })
        }
      }).catch(err => {
      });
    }
    function setPlayerData(dataStr) {
      player.setData({
        "data": dataStr
      }).then(() => {
        console.log("saved");
      }).catch(() => {
        console.log("not saved");
      });
    }
    function getPlayerData() {
      player.getData(["data"]).then(data => {
        if (data.data.length != 0) {
          var dataStr = data.data;
          console.log("ok");
          console.log(dataStr);
          window.unityInstance.SendMessage('YandexSDK', 'OnGetPlayerData', dataStr);
        }
        else {
          console.log("chota est");
          var dataStr = 'none';
          window.unityInstance.SendMessage('YandexSDK', 'OnGetPlayerData', dataStr);
        }
      }).catch((err) => {
        console.log("ne ok");
        var dataStr = 'none';
        window.unityInstance.SendMessage('YandexSDK', 'OnGetPlayerData', dataStr);
      });
    }
    function openRateUs() {
      sdk.feedback.canReview()
        .then(({ value, reason }) => {
          if (value) {
            sdk.feedback.requestReview()
              .then(({ feedbackSent }) => {
              window.focus();
                console.log(feedbackSent);
              })
          } else {
            console.log(reason)
          }
        })
    }
  </script>
</body>
</html>



]]></Content>
</Module>